#!/bin/bash
# ----------------------------------
source $(dirname $0)/../inc/includes_before
# ----------------------------------
#  __/\\\\____________/\\\\___________________/\\\\\\\\\\\____/\\\\\\\\\\\\\___
#   _\/\\\\\\________/\\\\\\_________________/\\\/////////\\\_\/\\\/////////\\\_
#    _\/\\\//\\\____/\\\//\\\____/\\\__/\\\__\//\\\______\///__\/\\\_______\/\\\_
#     _\/\\\\///\\\/\\\/_\/\\\___\//\\\/\\\____\////\\\_________\/\\\\\\\\\\\\\\__
#      _\/\\\__\///\\\/___\/\\\____\//\\\\\________\////\\\______\/\\\/////////\\\_
#       _\/\\\____\///_____\/\\\_____\//\\\____________\////\\\___\/\\\_______\/\\\_
#        _\/\\\_____________\/\\\__/\\_/\\\______/\\\______\//\\\__\/\\\_______\/\\\_
#         _\/\\\_____________\/\\\_\//\\\\/______\///\\\\\\\\\\\/___\/\\\\\\\\\\\\\/__
#          _\///______________\///___\////__________\///////////_____\/////////////_____
#			By toulousain79 ---> https://github.com/toulousain79/
#
######################################################################
#
#	Copyright (c) 2013 toulousain79 (https://github.com/toulousain79/)
#	Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#	The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#	IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#	--> Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php
#
##################### FIRST LINE #####################################

#### VARs
sLocSwitch="$1"

#### FUNCTIONs
# Install DEB package
fnInstallDebPackage() {
	local sPlexMediaVersion sVersionInstalled sPlexDeb sServices

	sPlexMediaVersion="1.12.1.4885-1046ba85f"
	case `getconf LONG_BIT` in
		64)	sPlexDeb="plexmediaserver_${sPlexMediaVersion}_amd64.deb";;
		*)	sPlexDeb="plexmediaserver_${sPlexMediaVersion}_i386.deb";;
	esac
	sVersionInstalled="`dpkg -l plexmediaserver | grep 'plexmediaserver' | awk '{ print $3 }'`"

	[ ! -f $MySB_Files/$sPlexDeb ] && curl --retry 3 --silent --insecure --location --show-error -o "$MySB_Files/$sPlexDeb" "https://downloads.plex.tv/plex-media-server/${sPlexMediaVersion}/$sPlexDeb"

	if [ "$sPlexMediaVersion" != "$sVersionInstalled" ]; then
		sServices="plexmediaserver"
		[ "$gbIsInstalled_Tautulli" == "YES" ] && sServices="$sServices tautulli"

		# Stop services
		gfnManageServices stop "$sServices"

		[ -f $MySB_Files/$sPlexDeb ] && dpkg -i $MySB_Files/$sPlexDeb
		systemctl daemon-reload
		systemctl enable plexmediaserver.service

		# Start Tautulli service
		gfnManageServices start "$sServices"
	else
		echo "PlexMedia version $sPlexMediaVersion is already installed"
	fi
}

#### CRON UPGRADE
if [ "$sLocSwitch" == "CRON" ] && [ "$gbIsInstalled_PlexMedia" == "YES" ]; then
	# Install DEB package
	fnInstallDebPackage
fi

#### INSTALL
if [ "$gbToInstall_PlexMedia" == "YES" ]; then
	#### Install package
	gfnPackageBundleInstall 'alsa-oss oss-compat libasound2-plugins'

	#### Install DEB package
	fnInstallDebPackage

	#### NginX
	install -v -o root -g root -m 0600 $MySB_InstallDir/templates/nginx/etc.nginx.locations.plexmediaserver.conf.tmpl /etc/nginx/locations/PlexMediaServer.conf
	install -v -o root -g root -m 0600 $MySB_InstallDir/templates/nginx/etc.nginx.upstream.plexmediaserver.conf.tmpl /etc/nginx/upstream/PlexMediaServer.conf
	install -v -o root -g root -m 0600 $MySB_InstallDir/templates/nginx/etc.nginx.proxy.plexmediaserver.conf.tmpl /etc/nginx/proxy/PlexMediaServer.conf

	if gfnCheckCommand 0 plexmediaserver; then
		cmdMySQL 'MySB_db' "UPDATE services SET to_install = '0', is_installed = '1' WHERE serv_name='Plex Media Server';" -v

		gfnGetRepoValues 'Tautulli' && gfnRepoManageByType
		gsRepoDirEscaped="`echo $gsRepoDir | sed s,/,\\\\\\\\\\/,g`"

		if [ ! -z $gsRepoDir ] && [ -d $gsRepoDir ]; then
			[ "$gbIsInstalled_Tautulli" == "YES" ] && gfnManageServices stop "tautulli"

			# Install PyOpenSSL for Python
			easy_install PyOpenSSL

			# System user
			if [ -z "`grep 'tautulli' /etc/passwd`" ]; then
				adduser --system --no-create-home tautulli
			fi
			# Directories
			[ ! -d $gsRepoDir/backups ] && mkdir $gsRepoDir/backups
			[ ! -d $gsRepoDir/logs ] && mkdir $gsRepoDir/logs
			[ ! -d $gsRepoDir/cache ] && mkdir $gsRepoDir/cache

			# /etc/default/tautulli
			install -v -o root -g root -m 0644 $MySB_InstallDir/templates/tautulli/etc.default.tautulli.tmpl /etc/default/tautulli
			perl -pi -e "s/<gsRepoDir>/$gsRepoDirEscaped/g" /etc/default/tautulli

			# Config.ini
			if [ ! -f $gsRepoDir/config.ini ]; then
				install -v -o tautulli -g nogroup -m 0644 $MySB_InstallDir/templates/tautulli/config.ini.tmpl $gsRepoDir/config.ini
				perl -pi -e "s/<gsHostNameFqdn>/$gsHostNameFqdn/g" $gsRepoDir/config.ini
				perl -pi -e "s/<gsRepoDir>/$gsRepoDirEscaped/g" $gsRepoDir/config.ini


				if [ -f $MySB_InstallDir/ssl/fullchain.pem ]; then
					perl -pi -e "s/<https_cert>/$gsInstallDirEscaped\/ssl\/cert.pem/g" $gsRepoDir/config.ini
					perl -pi -e "s/<https_key>/$gsInstallDirEscaped\/ssl\/privkey.pem/g" $gsRepoDir/config.ini
					perl -pi -e "s/<https_fullchain>/$gsInstallDirEscaped\/ssl\/fullchain.pem/g" $gsRepoDir/config.ini
				else
					perl -pi -e "s/<https_cert>/$gsInstallDirEscaped\/ssl\/mysb.cert/g" $gsRepoDir/config.ini
					perl -pi -e "s/<https_key>/$gsInstallDirEscaped\/ssl\/mysb.key/g" $gsRepoDir/config.ini
					perl -pi -e "s/<https_fullchain>/\"\"/g" $gsRepoDir/config.ini
				fi
			fi

			# Config.py
			# nNumLine=$(cat $gsRepoDir/plexpy/config.py | grep "'HTTP_ROOT':" -n -m 1 | cut -d ':' -f 1)
			# sed -i "/'HTTP_ROOT':/d" $gsRepoDir/plexpy/config.py
			# sed -i ""$nNumLine"i\    'HTTP_ROOT': (str, 'General', 'https://$gsHostNameFqdn:$gsPort_MySB_HTTPS/tt/')," $gsRepoDir/plexpy/config.py

			# Webauth.py
			# perl -pi -e "s/plexpy.HTTP_ROOT \+ \"auth\/logout\"/\"https:\/\/$gsHostNameFqdn:$gsPort_MySB_HTTPS\/tt\/auth\/logout\"/g" $gsRepoDir/plexpy/webauth.py
			# perl -pi -e "s/plexpy.HTTP_ROOT \+ \"auth\/login\"/\"https:\/\/$gsHostNameFqdn:$gsPort_MySB_HTTPS\/tt\/auth\/login\"/g" $gsRepoDir/plexpy/webauth.py
			# perl -pi -e "s/\(plexpy.HTTP_ROOT\)/\(\"https:\/\/$gsHostNameFqdn:$gsPort_MySB_HTTPS\/tt\"\)/g" $gsRepoDir/plexpy/webauth.py
			# Webserve.py
			# perl -pi -e "s/plexpy.HTTP_ROOT \+ \"welcome\"/\"https:\/\/$gsHostNameFqdn:$gsPort_MySB_HTTPS\/tt\/welcome\"/g" $gsRepoDir/plexpy/webserve.py
			# perl -pi -e "s/plexpy.HTTP_ROOT \+ \"home\"/\"https:\/\/$gsHostNameFqdn:$gsPort_MySB_HTTPS\/tt\/home\"/g" $gsRepoDir/plexpy/webserve.py
			# perl -pi -e "s/plexpy.HTTP_ROOT \+ \"logs\"/\"https:\/\/$gsHostNameFqdn:$gsPort_MySB_HTTPS\/tt\/logs\"/g" $gsRepoDir/plexpy/webserve.py
			# perl -pi -e "s/\(plexpy.HTTP_ROOT\)/\(\"https:\/\/$gsHostNameFqdn:$gsPort_MySB_HTTPS\/tt\"\)/g" $gsRepoDir/plexpy/webserve.py

			# Restore db from PlexPy
			[ -f $MySB_InstallDir/files/tautulli.db ] && mv -v $MySB_InstallDir/files/tautulli.db $gsRepoDir/tautulli.db

			# Directory rights
			chown tautulli:nogroup -R $gsRepoDir

			# Init script
			install -v -o root -g root -m 0755 $gsRepoDir/init-scripts/init.ubuntu /etc/init.d/tautulli
			update-rc.d tautulli defaults
			systemctl daemon-reload
			systemctl enable tautulli.service

			# NginX
			install -v -o root -g root -m 0644 $MySB_InstallDir/templates/nginx/etc.nginx.locations.tautulli.conf.tmpl /etc/nginx/locations/Tautulli.conf
			install -v -o root -g root -m 0644 $MySB_InstallDir/templates/nginx/etc.nginx.proxy.tautulli.conf.tmpl /etc/nginx/proxy/Tautulli.conf
			perl -pi -e "s/<MainUser>/$gsMainUserName/g" /etc/nginx/locations/Tautulli.conf

			# Update certificates for python
			update-ca-certificates --fresh &> /dev/null

			# START services
			gfnManageServices start "plexmediaserver nginx tautulli"

			# Force update users' table history
			#sqlite3 -echo -cmd '.timeout 150000' $gsRepoDir/tautulli.db "UPDATE users SET do_notify='1', keep_history='1' WHERE 1;"

			if [ -f $gsRepoDir/Tautulli.py ]; then
				cmdMySQL 'MySB_db' "UPDATE services SET to_install = '0', is_installed = '1' WHERE serv_name='Tautulli';" -v
				# Disable the upgrade job
				cmdMySQL 'MySB_db' "UPDATE repositories SET upgrade='0' WHERE name='Tautulli';" -v
			fi
		fi
	fi
fi

# -----------------------------------------
source $(dirname $0)/../inc/includes_after
# -----------------------------------------
##################### LAST LINE ######################################
