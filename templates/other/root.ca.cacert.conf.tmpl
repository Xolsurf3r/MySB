#!/bin/bash
# ----------------------------------
#  __/\\\\____________/\\\\___________________/\\\\\\\\\\\____/\\\\\\\\\\\\\___
#   _\/\\\\\\________/\\\\\\_________________/\\\/////////\\\_\/\\\/////////\\\_
#    _\/\\\//\\\____/\\\//\\\____/\\\__/\\\__\//\\\______\///__\/\\\_______\/\\\_
#     _\/\\\\///\\\/\\\/_\/\\\___\//\\\/\\\____\////\\\_________\/\\\\\\\\\\\\\\__
#      _\/\\\__\///\\\/___\/\\\____\//\\\\\________\////\\\______\/\\\/////////\\\_
#       _\/\\\____\///_____\/\\\_____\//\\\____________\////\\\___\/\\\_______\/\\\_
#        _\/\\\_____________\/\\\__/\\_/\\\______/\\\______\//\\\__\/\\\_______\/\\\_
#         _\/\\\_____________\/\\\_\//\\\\/______\///\\\\\\\\\\\/___\/\\\\\\\\\\\\\/__
#          _\///______________\///___\////__________\///////////_____\/////////////_____
#			By toulousain79 ---> https://github.com/toulousain79/
#
######################################################################
#
#	Copyright (c) 2013 toulousain79 (https://github.com/toulousain79/)
#	Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#	The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#	IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#	--> Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php
#
##################### FIRST LINE #####################################
# https://jamielinux.com/docs/openssl-certificate-authority/_downloads/root-config.txt
######################################################################

[ ca ]
# `man ca`
default_ca      		= CA_default

[ CA_default ]
name_opt               	= ca_default
cert_opt               	= ca_default
default_days          	= 3650
preserve              	= no
policy                	= policy_strict
x509_extensions       	= local_ca_extensions
email_in_dn           	= no
# Directory and file locations.
dir                   	= <InstallDir>/ssl/CA			# WARNING: if you change that, change the default_keyfile in the [req] section below too
certs 					= $dir/certs
crl_dir 				= $dir/crl
new_certs_dir 			= $dir/newcerts
database              	= $dir/index.txt
serial                	= $dir/serial
RANDFILE 				= $dir/private/.rand
# The root key and root certificate.
private_key 			= $dir/private/cakey.pem	# WARNING: if you change that, change the default_keyfile in the [req] section below too
certificate 			= $dir/certs/cacert.pem
# For certificate revocation lists.
crlnumber				= $dir/crlnumber
crl 					= $dir/crl/cacrl.pem
crl_extensions			= crl_ext
default_crl_days      	= 60
# SHA-1 is deprecated, so use SHA-2 instead.
default_md            	= sha256

[ local_ca_extensions ]
subjectAltName      	= IP:<ipaddress>
basicConstraints    	= CA:false
nsCertType          	= server

[ policy_strict ]
# The root CA should only sign intermediate certificates that match.
# See the POLICY FORMAT section of `man ca`.
countryName             = match
stateOrProvinceName     = match
organizationName        = match
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional

[ policy_loose ]
# Allow the intermediate CA to sign a more diverse range of certificates.
# See the POLICY FORMAT section of the `ca` man page.
countryName             = optional
stateOrProvinceName     = optional
localityName            = optional
organizationName        = optional
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional

[ req ]
# Options for the `req` tool (`man req`).
default_bits        	= 2048
distinguished_name		= req_distinguished_name
string_mask 			= utf8only

# SHA-1 is deprecated, so use SHA-2 instead.
default_md          	= sha256

# Extension to add when the -x509 option is used.
x509_extensions			= v3_ca

[ req_distinguished_name ]
# See <https://en.wikipedia.org/wiki/Certificate_signing_request>.
countryName             = FR
stateOrProvinceName     = FR
localityName			= FR
0.organizationName		= MySB
organizationalUnitName  = MySB
commonName 				= <servername>
emailAddress            = admin@localhost

# Optionally, specify some defaults.
countryName_default             = FR
stateOrProvinceName_default     = France
localityName_default            =
0.organizationName_default      = MySB
organizationalUnitName_default  = MySB
emailAddress_default            = admin@localhost

[ v3_ca ]
# Extensions for a typical CA (`man x509v3_config`).
subjectKeyIdentifier 	= hash
authorityKeyIdentifier 	= keyid:always,issuer
basicConstraints 		= critical, CA:true
keyUsage				= critical, digitalSignature, cRLSign, keyCertSign

[ v3_intermediate_ca ]
# Extensions for a typical intermediate CA (`man x509v3_config`).
subjectKeyIdentifier	= hash
authorityKeyIdentifier	= keyid:always,issuer
basicConstraints		= critical, CA:true, pathlen:0
keyUsage				= critical, digitalSignature, cRLSign, keyCertSign

[ usr_cert ]
# Extensions for client certificates (`man x509v3_config`).
basicConstraints		= CA:FALSE
nsCertType				= client, email
nsComment				= "OpenSSL Generated Client Certificate"
subjectKeyIdentifier	= hash
authorityKeyIdentifier	= keyid,issuer
keyUsage				= critical, nonRepudiation, digitalSignature, keyEncipherment
extendedKeyUsage		= clientAuth, emailProtection

[ server_cert ]
# Extensions for server certificates (`man x509v3_config`).
basicConstraints		= CA:FALSE
nsCertType				= server
nsComment				= "OpenSSL Generated Server Certificate"
subjectKeyIdentifier	= hash
authorityKeyIdentifier	= keyid,issuer:always
keyUsage				= critical, digitalSignature, keyEncipherment
extendedKeyUsage		= serverAuth

[ crl_ext ]
# Extension for CRLs (`man x509v3_config`).
authorityKeyIdentifier	= keyid:always

[ ocsp ]
# Extension for OCSP signing certificates (`man ocsp`).
basicConstraints		= CA:FALSE
subjectKeyIdentifier	= hash
authorityKeyIdentifier	= keyid,issuer
keyUsage				= critical, digitalSignature
extendedKeyUsage		= critical, OCSPSigning

##################### LAST LINE ######################################